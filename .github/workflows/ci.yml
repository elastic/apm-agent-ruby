name: ci

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

# limit the access of the generated GITHUB_TOKEN
permissions:
  contents: read

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
    - uses: elastic/apm-pipeline-library/.github/actions/pre-commit@current

  filter:
    needs: [pre-commit]
    runs-on: ubuntu-latest
    timeout-minutes: 3
    outputs:
      matrix: ${{ steps.generate.outputs.matrix }}
      matrix-main: ${{ steps.generate-main.outputs.matrix }}
    steps:
      - id: generate
        uses: elastic/apm-pipeline-library/.github/actions/version-framework@feature/add-matrix-version-framework
        with:
          versionsFile: .ci/.jenkins_ruby.yml
          frameworksFile: .ci/.jenkins_framework.yml
          excludedFile: .ci/.jenkins_exclude.yml
      - id: generate-main
        uses: elastic/apm-pipeline-library/.github/actions/version-framework@feature/add-matrix-version-framework
        with:
          versionsFile: .ci/.jenkins_ruby.yml
          frameworksFile: .ci/.jenkins_main_framework.yml
          excludedFile: .ci/.jenkins_exclude.yml

  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: [filter]
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.filter.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3
      - name: Run BDD tests
        run: ./spec/scripts/features.sh "${{ matrix.version }}"
      - name: Run version/framework
        run: ./spec/scripts/spec.sh "${{ matrix.version }}" "${{ matrix.framework }}"

  test-main:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: [filter]
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.filter.outputs.matrix-main) }}
    steps:
      - uses: actions/checkout@v3
      - name: Run BDD tests
        run: ./spec/scripts/features.sh "${{ matrix.version }}"
      - name: Run version/framework
        run: ./spec/scripts/spec.sh "${{ matrix.version }}" "${{ matrix.framework }}"
