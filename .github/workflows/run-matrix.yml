---
# Runs the tests based on the provided files in ci.yml
name: run-matrix

on:
  workflow_call:
    inputs:
      versionsFile:
        required: true
        type: string
      frameworksFile:
        required: true
        type: string
      excludedFile:
        required: true
        type: string

permissions:
  contents: read

jobs:
  create-test-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: generate
        uses: elastic/oblt-actions/version-framework@v1
        with:
          versions-file: ${{ inputs.versionsFile }}
          frameworks-file: ${{ inputs.frameworksFile }}
          excluded-file: ${{ inputs.excludedFile }}
  test:
    needs:
      - create-test-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 20
      matrix: ${{ fromJSON(needs.create-test-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - name: Run BDD tests
        run: ./spec/scripts/features.sh ${{ matrix.version }}
      - name: Run test
        run: ./spec/scripts/spec.sh ${{ matrix.version }} ${{ matrix.framework }}
        env:
          JUNIT_PREFIX: ${{ matrix.version }}-${{ matrix.framework }}

      - if: success() || failure()
        id: normalize-junit
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            function normalizeName(name) {
              return name.replace(/["/:<>|*?\\]/g, '-')
            }
            const framework = normalizeName('${{ matrix.framework }}')
            const version = normalizeName('${{ matrix.version }}')
            return `${version}-${framework}`
      - if: success() || failure()
        name: Upload JUnit Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ steps.normalize-junit.outputs.result }}
          path: "**/spec/junit-reports/**/*ruby-agent-junit.xml"
