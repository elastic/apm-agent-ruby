name: release

on:
  push:
    tags:
      - "v[0-9]+*"
    branches:
      - main

permissions:
  contents: read

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      attestations: write
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
      - name: RubyGems login
        run: |
          RUBY_HOME="${HOME}/.gem"
          RUBY_CREDENTIALS_FILE="${RUBY_HOME}/credentials"
          mkdir -p "${RUBY_HOME}"
          echo '---' > "${RUBY_CREDENTIALS_FILE}"
          echo ":rubygems_api_key: ${{ secrets.RUBYGEMS_API_KEY }}" >> "${RUBY_CREDENTIALS_FILE}"
          chmod 0600 "${RUBY_CREDENTIALS_FILE}"

      - name: Install build system
        run: .ci/scripts/install-build-system.sh

      - name: rake release (only for tags)
        run: rake release
        if: startsWith(github.ref, 'refs/tags')

      - name: rake build
        run: rake build
        if:  ${{ ! startsWith(github.ref, 'refs/tags') }}

      - name: generate build provenance
        uses: actions/attest-build-provenance@bdd51370e0416ac948727f861e03c2f05d32d78e  # v1.3.2
        with:
          subject-path: "${{ github.workspace }}/pkg/*.gem" 
      
  update-branch:
    needs:
      - release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
      - name: Setup Git
        uses: elastic/apm-pipeline-library/.github/actions/setup-git@current
      - name: Install build system
        run: .ci/scripts/install-build-system.sh
      - name: rake release:update_branch (only for tags)
        run: rake release:update_branch
        if: startsWith(github.ref, 'refs/tags')

  status:
    if: always()
    runs-on: ubuntu-latest
    needs:
      - release
      - update-branch
    steps:
      - id: check
        uses: elastic/apm-pipeline-library/.github/actions/check-dependent-jobs@current
        with:
          needs: ${{ toJSON(needs) }}
      - run: ${{ steps.check.outputs.isSuccess }}
      - if: ${{ always() && startsWith(github.ref, 'refs/tags') }}
        uses: elastic/oblt-actions/slack/notify-result@v1
        with:
          bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel-id: "#apm-agent-ruby"
          message: ":traffic_cone: updatecli failed for `${{ github.repository }}@${{ github.ref_name }}`, @robots-ci please look what's going on <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|here>"
